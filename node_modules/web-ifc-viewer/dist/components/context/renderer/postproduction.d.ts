import { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';
import { Camera, Scene, WebGLRenderer } from 'three';
import { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';
import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';
import { SAOPass } from 'three/examples/jsm/postprocessing/SAOPass';
import { OutlineEffect } from 'three/examples/jsm/effects/OutlineEffect';
import { IfcContext } from '../context';
export declare class Postproduction {
    private context;
    composer: EffectComposer;
    fxaaPass: ShaderPass;
    renderPass?: RenderPass;
    saoPass?: SAOPass;
    outlineEffect: OutlineEffect;
    scene?: Scene;
    camera?: Camera;
    active: boolean;
    activeLayers: {
        ao: boolean;
        outline: boolean;
    };
    private aoInitialized;
    constructor(context: IfcContext, renderer: WebGLRenderer);
    dispose(): void;
    render(): void;
    setSize(width: number, height: number): void;
    private initializeAmbientOclussionPasses;
}
