import { Line, Line3, Matrix4, Vector2 } from 'three';
import { IFCModel } from 'web-ifc-three/IFC/components/IFCModel';
import { ShapeCaster } from './shape-caster';
import { IfcContext } from '../context';
export declare class SelectionWindow {
    private context;
    toolMode: string;
    liveUpdate: boolean;
    wireframe: boolean;
    displayHelper: boolean;
    helperDepth: number;
    rotate: boolean;
    selectionShape: Line<import("three").BufferGeometry, import("three").Material | import("three").Material[]>;
    selectionPoints: number[];
    dragging: boolean;
    selectionShapeNeedsUpdate: boolean;
    selectionNeedsUpdate: boolean;
    startX: number;
    startY: number;
    prevX: number;
    prevY: number;
    tempVec0: Vector2;
    tempVec1: Vector2;
    tempVec2: Vector2;
    toScreenSpaceMatrix: Matrix4;
    lassoSegments: Line3[];
    caster: ShapeCaster;
    onSelected?: (model: IFCModel, indices: number[]) => void;
    constructor(context: IfcContext);
    setupSelectionShape(): void;
    onDragStarted(event: MouseEvent): void;
    onDragFinished(): void;
    onDrag(event: MouseEvent): void;
    updateSelectionLasso(): void;
    updateAll(): void;
    update(model: IFCModel): void;
    updateSelection(model: IFCModel): void;
}
